# Dockerfile.media-processor (Place in the root directory)

FROM ubuntu:22.04

# Install GStreamer, Python, Kafka client libs, and Python bindings
RUN apt-get update && apt-get install -y --no-install-recommends \
    # GStreamer Core & Plugins
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    libgstreamer-plugins-good1.0-dev \
    libgstreamer-plugins-bad1.0-dev \
    libgstreamer-plugins-ugly1.0-dev \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-tools \
    gstreamer1.0-rtsp \
    # Python & Pip
    python3 \
    python3-pip \
    # GStreamer Python Bindings (GObject Introspection)
    python3-gi python3-gi-cairo gir1.2-gstreamer-1.0 gir1.2-gst-plugins-base-1.0 \
    gir1.2-gstreamer-rtsp-server-1.0 gir1.2-gstwebrtc-1.0 \
    # Confluent Kafka C library dependency
    librdkafka-dev \
    build-essential \
    # Add any other system dependencies needed by your service code
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Install Python dependencies for the media processor service
COPY ./media_processor_service/requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy the application files for the media processor service
# Adjust paths based on your actual project structure
COPY ./media_processor_service /app/
# Copy shared core components if needed
# COPY ./backend/app/core /app/core/

# Expose any ports the service might need (e.g., for metrics or a control API)
# EXPOSE 5001

# Set environment variables (if required by the service)
# ENV NVIDIA_VISIBLE_DEVICES=all
# ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility,video
# Example GStreamer debug level
ENV GST_DEBUG=2

# Start the actual media processor service script
CMD ["python3", "main.py"] # Assumes entrypoint is main.py in /app 