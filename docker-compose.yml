version: '3.8'

services:
  # Web frontend (RingLight UI)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ringlight-network

  # Backend API (RingLight Core)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - POSTGRES_SERVER=db
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092 # Added Kafka
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081 # Added Schema Registry
      - LLM_SERVICE_URL=http://llm-service:6000
      - STREAMING_SERVICE_URL=http://media-processor-service:5001 # Updated service name/port
      - SPEECH_SERVICE_URL=http://speech-service:50051
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      kafka: # Added Kafka dependency
        condition: service_started
    networks:
      - ringlight-network
    # --- Optional: GPU Access for Backend ---
    # deploy: ...

  # Database (PostgreSQL)
  db:
    image: postgres:14-alpine
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - ringlight-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-verxe_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  # Redis
  redis:
    image: redis:6-alpine
    volumes:
      - redis-data:/data
    networks:
      - ringlight-network
    ports:
      - "6379:6379"

  # Apache Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.3.0 # Use a specific version
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      # - "29092:29092" # Optional: Expose for host access if needed
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1 # Required for cp-kafka >= 5.4.0
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101 # Optional JMX port
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - ringlight-network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0 # Use a specific version
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    networks:
      - ringlight-network

  # Schema Registry (Optional but Recommended)
  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.0 # Use a specific version
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
      - zookeeper
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - ringlight-network

  # --- Placeholder Services for Future RingLight Features ---

  # Media Processing Service (GStreamer + RAPIDS)
  media-processor-service:
    build:
      context: .
      dockerfile: Dockerfile.media-processor # Updated Dockerfile name
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu, utility, video]
    volumes:
      - media-storage:/app/media
    networks:
      - ringlight-network
    depends_on: # Added Kafka dependency
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SCHEMA_REGISTRY_URL=http://schema-registry:8081
      # Add any other specific ENV vars needed by this service

  # LLM service
  llm-service:
    build:
      context: .
      dockerfile: Dockerfile.llm
    ports:
      - "6000:6000"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    volumes:
      - model-cache:/app/models
    networks:
      - ringlight-network

  # Riva speech service
  speech-service:
    build:
      context: .
      dockerfile: Dockerfile.riva
    ports:
      - "50051:50051"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    volumes:
      - speech-models:/opt/riva/models
    networks:
      - ringlight-network

# Define the network
networks:
  ringlight-network:
    driver: bridge

# Define persistent volumes
volumes:
  postgres-data:
  redis-data:
  media-storage:
  model-cache:
  speech-models: 